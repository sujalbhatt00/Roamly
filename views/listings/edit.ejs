<% layout("/layouts/boilerplate") %>

<body class="bg-light py-5">
  <div class="container">
    <div class="col-lg-8 mx-auto">
      <!-- Modern Glass Card -->
      <div class="card border-0 shadow-lg rounded-4" style="backdrop-filter: blur(8px); background: rgba(255, 255, 255, 0.9);">
        <div class="card-body p-4 p-md-5">
          <div class="text-center mb-3">
            <!-- Removed Icon -->
            <h3 class="fw-bold mb-1">Edit Your Property</h3>
          </div>


          <!--  FORM START -->
          <form class="needs-validation" novalidate method="POST" action="/listings/<%= listing._id %>/?_method=PUT" enctype="multipart/form-data">
            
            <!-- Title -->
            <div class="mb-4">
              <label class="form-label fw-semibold">Property Title</label>
              <input name="listing[title]" value="<%= listing.title %>" type="text" class="form-control form-control-lg" required>
              <div class="invalid-feedback">Please enter a property title.</div>
            </div>

            <!-- Description -->
            <div class="mb-4">
              <label class="form-label fw-semibold">Description</label>
              <textarea name="listing[description]" rows="3" class="form-control form-control-lg" required><%= listing.description %></textarea>
              <div class="invalid-feedback">Please enter a property description.</div>
            </div>

            <!-- Image -->
            <div class="mb-4 text-center">
              <label class="form-label fw-semibold">Current Image</label>
              <div class="border rounded-4 overflow-hidden shadow-sm mx-auto my-2" style="max-width:300px; max-height:220px;">
                <img src="<%= originalImageUrl %>" alt="Listing Image" class="img-fluid w-100 h-100" style="object-fit: cover;">
              </div>

              <div class="mt-3">
                <label class="form-label fw-semibold">Upload New Image</label>
                <input name="listing[image]" type="file" class="form-control form-control-lg">
              </div>
            </div>

            <!-- Price + Location Info -->
            <div class="row">
              <div class="col-md-4 mb-4">
                <label class="form-label fw-semibold">Price (₹)</label>
                <input name="listing[price]" value="<%= listing.price %>" type="number" class="form-control form-control-lg" required min="1">
                <div class="invalid-feedback">Please enter a valid price.</div>
              </div>

              <div class="col-md-4 mb-4">
                <label class="form-label fw-semibold">Country</label>
                <select id="country" name="listing[country]" class="form-select form-select-lg" required>
                  <option value="">Select Country</option>
                  <% countries.forEach(country => { %>
                    <% if (country.name) { %>
                      <option value="<%= country.name %>" <%= listing.country === country.name ? "selected" : "" %>><%= country.name %></option>
                    <% } %>
                  <% }) %>
                </select>
                <div class="invalid-feedback">Please select a country.</div>
              </div>

              <div class="col-md-4 mb-4">
                <label class="form-label fw-semibold">State</label>
                <select id="state" name="listing[state]" class="form-select form-select-lg" required>
                  <option value="">Select State</option>
                </select>
                <div class="invalid-feedback">Please select a state.</div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6 mb-4">
                <label class="form-label fw-semibold">City</label>
                <select id="city" name="listing[city]" class="form-select form-select-lg" required>
                  <option value="">Select City</option>
                </select>
                <div class="invalid-feedback">Please select a city.</div>
              </div>

              <div class="col-md-6 mb-4">
                <label class="form-label fw-semibold">Exact Location</label>
                <input name="listing[location]" value="<%= listing.location %>" type="text" class="form-control form-control-lg" required>
                <div class="invalid-feedback">Please enter a location.</div>
              </div>
            </div>

            <!-- Category -->
            <div class="mb-4">
              <label class="form-label fw-semibold">Category</label>
              <select name="listing[category]" class="form-select form-select-lg" required>
                <option value="">Select a category</option>
                <% ["Arctic","Mountain","Castles","Farms","Camping","Rooms","Iconic Cities","Amazing pools","Boats","Other"].forEach(c => { %>
                  <option value="<%= c %>" <%= listing.category === c ? "selected" : "" %>><%= c %></option>
                <% }) %>
              </select>
              <div class="invalid-feedback">Please select a category.</div>
            </div>

            <!-- Submit -->
            <div class="d-grid mt-4">
              <button type="submit" class="btn btn-dark btn-lg rounded-3 shadow-sm">
                <i class="bi bi-save me-2"></i> Update Property
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- ✅ Bootstrap Form Validation -->
  <script>
    (() => {
      'use strict';
      const forms = document.querySelectorAll('.needs-validation');
      Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    })();
  </script>

  <!-- Country, State, City Logic -->
  <script>
    const countries = <%- JSON.stringify(countries) %>;
    const listing = <%- JSON.stringify(listing) %>;

    document.addEventListener("DOMContentLoaded", () => {
      const countrySelect = document.getElementById("country");
      const stateSelect = document.getElementById("state");
      const citySelect = document.getElementById("city");

      function populateStates(countryName, selectedState) {
        const selectedCountry = countries.find(c => c.name === countryName);
        stateSelect.innerHTML = '<option value="">Select State</option>';
        citySelect.innerHTML = '<option value="">Select City</option>';

        if (selectedCountry?.states?.length) {
          selectedCountry.states.forEach(state => {
            if (state.name) {
              const option = document.createElement("option");
              option.value = state.name;
              option.textContent = state.name;
              if (selectedState === state.name) option.selected = true;
              stateSelect.appendChild(option);
            }
          });
          stateSelect.disabled = false;
        } else {
          stateSelect.disabled = true;
          citySelect.disabled = true;
        }
      }

      function populateCities(countryName, stateName, selectedCity) {
        const selectedCountry = countries.find(c => c.name === countryName);
        const selectedStateObj = selectedCountry?.states?.find(s => s.name === stateName);
        citySelect.innerHTML = '<option value="">Select City</option>';

        if (selectedStateObj?.cities?.length) {
          selectedStateObj.cities.forEach(city => {
            const option = document.createElement("option");
            option.value = city.name;
            option.textContent = city.name;
            if (selectedCity === city.name) option.selected = true;
            citySelect.appendChild(option);
          });
          citySelect.disabled = false;
        } else {
          citySelect.disabled = true;
        }
      }

      // Prepopulate existing
      if (listing.country) populateStates(listing.country, listing.state);
      if (listing.country && listing.state) populateCities(listing.country, listing.state, listing.city);

      countrySelect.addEventListener("change", e => {
        populateStates(e.target.value, null);
        citySelect.innerHTML = '<option value="">Select City</option>';
      });

      stateSelect.addEventListener("change", e => {
        populateCities(countrySelect.value, e.target.value, null);
      });
    });
  </script>

  <style>
    body { font-family: 'Inter', sans-serif; background-color: #f5f6f7; }
    label { color: #333; }
    .form-control, .form-select {
      border-radius: 12px;
      padding: 0.8rem 1rem;
      border: 1px solid #dee2e6;
    }
    .form-control:focus, .form-select:focus {
      border-color: #000;
      box-shadow: 0 0 0 0.2rem rgba(0,0,0,0.1);
    }
    button.btn-dark {
      background: linear-gradient(90deg, #000, #444);
      border: none;
      transition: all 0.3s;
    }
    button.btn-dark:hover {
      transform: translateY(-1px);
      background: linear-gradient(90deg, #222, #000);
    }
  </style>
  <script>
  document.querySelectorAll('form.needs-validation').forEach(form => {
    form.addEventListener('submit', function(e) {
      // Enable state and city before submit so their values are sent
      document.getElementById('state').disabled = false;
      document.getElementById('city').disabled = false;
    });
  });
</script>
</body>
