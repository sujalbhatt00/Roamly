<% layout("/layouts/boilerplate") %>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

  :root {
    --roamly-red: #E54D42;
    --roamly-red-rgb: 229, 77, 66;
    --roamly-dark-red: #c9302c;
    --roamly-light-gray: #f8f9fa;
    --roamly-border-gray: #e0e0e0;
    --roamly-text-dark: #222222;
    --roamly-text-medium: #717171;
    --shadow-sm: 0 2px 4px rgba(0,0,0,0.06);
    --shadow-md: 0 5px 15px rgba(0,0,0,0.1);
    --border-radius-sm: 8px;
    --border-radius-lg: 16px;
  }

  body {
    font-family: 'Inter', sans-serif;
    background-color: var(--roamly-light-gray);
  }

  .form-page-container {
    max-width: 900px;
    margin: 2.5rem auto;
    padding: 0 1rem;
  }

  .form-card {
    background: #fff;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-md);
    border: none;
    overflow: hidden;
  }

  .form-card-body {
    padding: 2.5rem 3rem;
  }

  @media (max-width: 767.98px) {
    .form-card-body {
      padding: 2rem 1.5rem;
    }
  }

  .form-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  .form-header h3 {
    font-weight: 700;
    font-size: 2rem;
    color: var(--roamly-text-dark);
  }
  .form-header i {
    color: var(--roamly-red);
    margin-right: 0.5rem;
  }
  .form-header hr {
    margin-top: 1.5rem;
    border-top: 1px solid var(--roamly-border-gray);
  }

  .form-group-modern {
    margin-bottom: 1.5rem;
  }

  .form-group-modern .form-label {
    font-weight: 600;
    color: var(--roamly-text-dark);
    margin-bottom: 0.5rem;
  }

  .form-group-modern .form-control,
  .form-group-modern .form-select {
    border: 1px solid var(--roamly-border-gray);
    padding: 0.75rem 1rem;
    font-size: 1rem;
    border-radius: var(--border-radius-sm);
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
  }
  .form-group-modern .form-control:focus,
  .form-group-modern .form-select:focus {
    border-color: var(--roamly-red);
    box-shadow: 0 0 0 3px rgba(var(--roamly-red-rgb), 0.2);
  }

  textarea.form-control {
    min-height: 120px;
  }

  .form-text {
      font-size: 0.9rem;
      color: var(--roamly-text-medium);
      margin-top: 0.25rem;
      display: block;
  }

  /* Image Preview Box */
  .current-image-preview {
    width: 100%;
    border: 1px solid var(--roamly-border-gray);
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    box-shadow: var(--shadow-sm);
    margin-bottom: 1rem;
  }
  .current-image-preview img {
    width: 100%;
    max-height: 220px;
    object-fit: cover;
  }

  /* File Upload Box */
  .file-upload-label {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border: 2px dashed var(--roamly-border-gray);
    border-radius: var(--border-radius-sm);
    padding: 2rem;
    cursor: pointer;
    transition: all 0.2s ease;
    text-align: center;
  }

  .file-upload-label:hover {
    border-color: var(--roamly-red);
    background-color: var(--roamly-light-gray);
  }

  .file-upload-label i {
    font-size: 2.5rem;
    color: var(--roamly-text-medium);
    margin-bottom: 0.75rem;
  }
  .file-upload-label span {
    color: var(--roamly-text-dark);
    font-weight: 500;
  }

  .file-name-display {
    margin-top: .75rem;
    font-size: .9rem;
    color: var(--roamly-text-medium);
    text-align: center;
  }

  .btn-roamly {
    background-color: var(--roamly-red);
    border-color: var(--roamly-red);
    color: #fff;
    font-weight: 600;
    padding: .85rem 1rem;
    font-size: 1.1rem;
    border-radius: var(--border-radius-sm);
    margin-top: 1rem;
    width: 100%;
  }
  .btn-roamly:hover {
    background-color: var(--roamly-dark-red);
    border-color: var(--roamly-dark-red);
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(var(--roamly-red-rgb), 0.3);
  }
</style>

<div class="form-page-container">
  <div class="form-card">
    <div class="form-card-body">
      <div class="form-header">
        <h3><i class="fa-solid fa-pen-to-square"></i>Edit Your Property</h3>
        <hr />
      </div>

      <form method="POST" action="/listings/<%= listing._id %>/?_method=PUT" novalidate class="needs-validation" enctype="multipart/form-data">

        <div class="row">
          <div class="col-md-6">

            <div class="form-group-modern">
              <label class="form-label">Title</label>
              <input name="listing[title]" type="text" class="form-control" required value="<%= listing.title %>">
            </div>

            <div class="form-group-modern">
              <label class="form-label">Description</label>
              <textarea name="listing[description]" rows="3" class="form-control" required><%= listing.description %></textarea>
            </div>

            <div class="form-group-modern">
              <label class="form-label">Location</label>
              <input name="listing[location]" type="text" class="form-control" required value="<%= listing.location %>">
            </div>

            <div class="form-group-modern">
              <label class="form-label">Price (₹)</label>
              <input name="listing[price]" type="number" min="1" required class="form-control" value="<%= listing.price %>">
            </div>

          </div>

          <div class="col-md-6">

            <!-- ✅ Single image preview -->
            <div class="form-group-modern">
              <label class="form-label">Property Image</label>

              <div class="current-image-preview">
                <img src="<%= originalImageUrl || 'placeholder_image_url.jpg' %>" id="currentImagePreview" alt="Listing Image">
              </div>

              <input name="listing[image]" type="file" class="d-none" id="image-upload" accept="image/*">
              <label for="image-upload" class="file-upload-label">
                <i class="fa-solid fa-cloud-arrow-up"></i>
                <span>Click to upload new image</span>
              </label>
              <div id="file-name-display" class="file-name-display"></div>
              <div class="form-text">Image must be less than 2MB.</div>
            </div>

            <div class="form-group-modern">
              <label class="form-label">Country</label>
              <select id="country" name="listing[country]" class="form-select" required>
                <option value="">Select Country</option>
                <% countries.forEach(country => { %>
                  <option value="<%= country.name %>" <%= listing.country === country.name ? "selected" : "" %>><%= country.name %></option>
                <% }) %>
              </select>
            </div>

            <div class="row">
              <div class="col-md-6 form-group-modern">
                <label class="form-label">State</label>
                <select id="state" name="listing[state]" class="form-select" required>
                  <option value="">Select State</option>
                </select>
              </div>

              <div class="col-md-6 form-group-modern">
                <label class="form-label">City</label>
                <select id="city" name="listing[city]" class="form-select" required>
                  <option value="">Select City</option>
                </select>
              </div>
            </div>

            <div class="form-group-modern">
              <label class="form-label">Category</label>
              <select name="listing[category]" class="form-select" required>
                <% ["Arctic","Mountain","Castles","Farms","Camping","Rooms","Iconic Cities","Amazing pools","Boats","Other"].forEach(c => { %>
                  <option value="<%= c %>" <%= listing.category === c ? "selected" : "" %>><%= c %></option>
                <% }) %>
              </select>
            </div>

          </div>
        </div>

        <button type="submit" class="btn btn-roamly">Save Changes</button>
      </form>
    </div>
  </div>
</div>

<script>
  const fileInput = document.getElementById('image-upload');
  const fileDisplay = document.getElementById('file-name-display');
  const preview = document.getElementById('currentImagePreview');

  fileInput.addEventListener('change', (e) => {
    const file = e.target.files[0];
    const maxSize = 2 * 1024 * 1024; // 2MB

    if (file) {
      if (file.size > maxSize) {
        alert("Image size must be less than 2MB.");
        fileInput.value = "";
        return;
      }

      fileDisplay.textContent = `Selected: ${file.name}`;
      const reader = new FileReader();
      reader.onload = () => preview.src = reader.result;
      reader.readAsDataURL(file);
    }
  });
</script>

<script>
  const countries = <%- JSON.stringify(countries) %>;
  const listing = <%- JSON.stringify(listing) %>;

  document.addEventListener("DOMContentLoaded", () => {
    const countrySelect = document.getElementById("country");
    const stateSelect = document.getElementById("state");
    const citySelect = document.getElementById("city");

    function populateStates(countryName, selectedState) {
      const country = countries.find(c => c.name === countryName);
      stateSelect.innerHTML = '<option value="">Select State</option>';
      citySelect.innerHTML = '<option value="">Select City</option>';

      if (!country?.states) return;
      country.states.forEach(state => {
        stateSelect.innerHTML += `<option value="${state.name}" ${selectedState === state.name ? "selected" : ""}>${state.name}</option>`;
      });
    }

    function populateCities(countryName, stateName, selectedCity) {
      const country = countries.find(c => c.name === countryName);
      const state = country?.states?.find(s => s.name === stateName);
      citySelect.innerHTML = '<option value="">Select City</option>';

      if (!state?.cities) return;
      state.cities.forEach(city => {
        citySelect.innerHTML += `<option value="${city.name}" ${selectedCity === city.name ? "selected" : ""}>${city.name}</option>`;
      });
    }

    populateStates(listing.country, listing.state);
    populateCities(listing.country, listing.state, listing.city);

    countrySelect.addEventListener("change", e => populateStates(e.target.value));
    stateSelect.addEventListener("change", e => populateCities(countrySelect.value, e.target.value));
  });
</script>

<script>
  (() => {
    const forms = document.querySelectorAll('.needs-validation');
    forms.forEach(form => {
      form.addEventListener('submit', event => {
        document.getElementById("state").disabled = false;
        document.getElementById("city").disabled = false;
      });
    });
  })();
</script>
