<% layout("/layouts/boilerplate") %>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

  /* --- Airbnb-Inspired Theme Variables --- */
  :root {
    --roamly-red: #E54D42;
    --roamly-red-rgb: 229, 77, 66;
    --roamly-dark-red: #c9302c;
    --roamly-dark-color: #222222;
    --roamly-text-color: #484848; /* Softer text */
    --roamly-text-medium: #717171;
    --roamly-border-gray: #EBEBEB; /* Lighter border */
    --roamly-light-gray: #F7F7F7; /* Lighter background */
    --shadow-sm: 0 1px 3px rgba(0,0,0,0.06); /* Softer shadow */
    --shadow-md: 0 4px 12px rgba(0,0,0,0.1);
    --border-radius-sm: 8px;
    --border-radius: 12px;
  }

  body {
    font-family: 'Inter', sans-serif;
    background-color: #fff; /* White background */
    color: var(--roamly-text-color);
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  p { line-height: 1.7; color: var(--roamly-text-color); } /* Slightly increased line height */
  a { color: var(--roamly-dark-color); text-decoration: none; transition: color 0.2s ease; }
  a:hover { color: var(--roamly-red); text-decoration: underline; }
  hr { border: 0; border-top: 1px solid var(--roamly-border-gray); margin: 40px 0; } /* More spacing */

  /* --- Base Button Styles --- */
  .btn {
    display: inline-block;
    width: 100%; /* Default to full width for mobile */
    box-sizing: border-box;
    padding: 14px 28px; /* Slightly larger */
    border-radius: var(--border-radius-sm);
    text-decoration: none;
    font-weight: 600;
    border: 1px solid transparent;
    cursor: pointer;
    transition: all 0.2s ease;
    text-align: center;
    font-size: 1rem;
  }
  .btn:active { transform: scale(0.98); }

  /* Airbnb-style Primary Button (Red Gradient) */
  .btn-danger {
     background: linear-gradient(90deg, #E61E4D 0%, #E31C5F 50%, #D70466 100%);
     color: #fff;
     border: none;
  }
  .btn-danger:hover {
     background: linear-gradient(90deg, #E31C5F 0%, #D70466 50%, #BD1E59 100%);
     color: #fff;
     box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }

  /* Dark Button (for Edit & Submit Review) */
  .btn-dark { background-color: var(--roamly-dark-color); color: #fff; border-color: var(--roamly-dark-color); }
  .btn-dark:hover { background-color: #000; border-color: #000; color: #fff; }

  /* Outline/Secondary Button */
  .btn-outline { border: 1px solid var(--roamly-dark-color); color: var(--roamly-dark-color); background: #fff; }
  .btn-outline:hover { background-color: var(--roamly-dark-color); color: #fff; }

  /* Outline Danger Button (for Delete) */
  .btn-danger-outline { border: 1px solid var(--roamly-dark-red); color: var(--roamly-dark-red); background: #fff; }
  .btn-danger-outline:hover { background-color: var(--roamly-dark-red); color: #fff; }


  /* --- Main Layout --- */
  .page-container { max-width: 1120px; margin: 40px auto; padding: 0 24px; } /* Slightly wider, more padding */

  /* --- Header (Title, Location) --- */
  .listing-header-main { margin-bottom: 24px; border-bottom: 1px solid var(--roamly-border-gray); padding-bottom: 24px;}
  .listing-header-main h1 { font-size: 26px; font-weight: 600; margin-bottom: 8px; color: var(--roamly-dark-color); } /* Airbnb uses smaller h1 */
  .listing-location { display: flex; align-items: center; gap: 8px; color: var(--roamly-text-medium); font-size: 1rem; font-weight: 400; }
  .listing-location i { font-size: 0.9rem; }

  /* --- Image --- */
  .listing-image-container { width: 100%; max-height: 500px; overflow: hidden; border-radius: var(--border-radius); margin-bottom: 40px; } /* Slightly more margin */
  .listing-image-container img { width: 100%; height: 100%; object-fit: cover; display: block; } /* display: block removes bottom space */

  /* --- Body Grid (2-Column) --- */
  .listing-body-grid { display: grid; grid-template-columns: 1fr; gap: 40px; } /* Mobile first: single column, reduced gap */
  /* --- *** ORDER FOR MOBILE *** --- */
  .listing-content { order: 2; } /* Content (desc/reviews) SECOND on mobile */
  .listing-sidebar { order: 1; } /* Sidebar (booking) FIRST on mobile */
  /* --- *** END ORDER CHANGE *** --- */


  /* --- Info Section --- */
  .info-section { padding: 0; }
  .info-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 24px; padding-bottom: 24px; border-bottom: 1px solid var(--roamly-border-gray); }
  .owner-info { display: flex; align-items: center; gap: 16px; }
  .owner-avatar { width: 56px; height: 56px; border-radius: 50%; object-fit: cover; }
  .owner-name { font-weight: 600; font-size: 1.15rem; color: var(--roamly-dark-color); }
  .listing-description { margin: 24px 0; font-size: 1rem; line-height: 1.7; }
  .listing-actions { display: flex; flex-direction: column; gap: 12px; margin-top: 24px; }
  .listing-actions form { display: contents; }

  /* --- Booking Card --- */
  .booking-card {
    border: 1px solid var(--roamly-border-gray);
    border-radius: var(--border-radius);
    padding: 24px;
    box-shadow: 0 6px 16px rgba(0,0,0,0.12); /* Airbnb-like shadow */
    background-color: #fff;
    /* Sticky positioning applied only on desktop via media query */
  }
  .booking-price { font-size: 1.4rem; font-weight: 600; margin-bottom: 16px; color: var(--roamly-dark-color); display: flex; align-items: baseline; gap: 4px;}
  .booking-price span { font-size: 1rem; font-weight: 400; color: var(--roamly-text-color); }
  .booking-card .btn-danger { width: 100%; margin-top: 1.5rem; }
  .booking-card-host-message { /* Style for the host message */
    text-align: center;
    padding: 1.5rem 1rem;
    font-size: 0.95rem;
    color: var(--roamly-text-medium);
  }


  /* --- Section Headings --- */
  .section-heading { font-size: 1.4rem; font-weight: 600; margin-bottom: 24px; color: var(--roamly-dark-color); padding-bottom: 16px; border-bottom: 1px solid var(--roamly-border-gray);}

  /* --- Reviews --- */
  .review-list { display: flex; flex-direction: column; gap: 28px; } /* More gap */
  .review-card { padding: 0; border: none; box-shadow: none; background: none; } /* Removed card styling */
  .review-header { display: flex; align-items: center; gap: 12px; margin-bottom: 12px; }
  .author-avatar { width: 40px; height: 40px; border-radius: 50%; object-fit: cover; } /* Smaller avatar */
  .author-info { flex-grow: 1; }
  .author-name { font-weight: 600; font-size: 1rem; color: var(--roamly-dark-color); }
  .review-rating { color: var(--roamly-red); font-size: 0.8rem; display: flex; align-items: center; gap: 2px;} /* Changed color, smaller */
  .review-rating i { font-size: 0.75rem; }
  .review-date { font-size: 0.85rem; color: var(--roamly-text-medium); }
  .review-comment { color: var(--roamly-text-color); margin-bottom: 0; line-height: 1.7; } /* Improved line height */
  .review-actions { margin-top: 0.75rem; text-align: left; } /* Align left, less margin */

  /* Review Delete Button - More subtle */
  .btn-delete-review {
    display: inline-flex; align-items: center; gap: 0.4em;
    background: none; border: none; color: var(--roamly-text-medium);
    padding: 4px 0; font-size: 0.85rem; font-weight: 500;
    border-radius: var(--border-radius-sm); cursor: pointer; transition: all 0.2s ease;
  }
  .btn-delete-review i { font-size: 0.9em; }
  .btn-delete-review:hover { color: var(--roamly-red); text-decoration: underline; }

  /* --- Review Form --- */
  .review-form-box { border-top: 1px solid var(--roamly-border-gray); padding-top: 24px; background: none; border-radius: 0; margin-top: 28px; }
  .review-form-box .form-group { margin-bottom: 1.5rem; }
  .review-form-box .form-label { display: block; font-weight: 500; margin-bottom: 0.5rem; font-size: 1rem; color: var(--roamly-dark-color);}
  .star-rating { display: flex; flex-direction: row-reverse; justify-content: flex-end; gap: 2px; }
  .star-rating input[type="radio"] { display: none; }
  .star-rating label { font-size: 28px; color: #ddd; cursor: pointer; transition: color 0.2s, transform 0.2s; } /* Larger stars */
  .star-rating input[type="radio"]:checked ~ label,
  .star-rating label:hover,
  .star-rating label:hover ~ label { color: var(--roamly-red); } /* Use brand color */
  .star-rating label:hover { transform: scale(1.1); }
  .form-input { width: 100%; padding: 12px 14px; border: 1px solid #ccc; border-radius: var(--border-radius-sm); font-size: 1rem; box-sizing: border-box; font-family: 'Inter', sans-serif; transition: border-color 0.2s, box-shadow 0.2s; }
  .form-input:focus { outline: none; border-color: var(--roamly-dark-color); box-shadow: 0 0 0 1px var(--roamly-dark-color); } /* Subtle focus */
  textarea.form-input { resize: vertical; min-height: 120px; }
  .rating-error-message { color: var(--roamly-red); font-size: 0.9rem; display: none; margin-top: 8px; }

  /* Login Prompt */
  .login-prompt { text-align: left; padding: 24px 0; background: none; border-radius: 0; border-top: 1px solid var(--roamly-border-gray); margin-top: 28px; }
  .login-prompt h5 { font-size: 1.1rem; font-weight: 600; color: var(--roamly-dark-color); margin-bottom: 8px; }
  .login-prompt p { margin-bottom: 1rem; }
  .login-prompt a { font-weight: 600; text-decoration: underline; }
  .login-prompt .btn { margin-top: 0; width: auto; max-width: 200px; display: inline-block; }

  /* --- Map --- */
  .listing-map { height: 400px; width: 100%; border-radius: var(--border-radius); overflow: hidden; } /* Removed border */

  /* --- Bootstrap Modal Overrides --- */
  .modal-content { border-radius: var(--border-radius); border: none; box-shadow: 0 8px 28px rgba(0,0,0,0.28); } /* Airbnb-like shadow */
  .modal-header { border-bottom: 1px solid var(--roamly-border-gray); padding: 1rem 1.5rem; }
  .modal-title { font-size: 1.1rem; font-weight: 700; color: var(--roamly-dark-color); }
  .modal-body { padding: 1.5rem; }
  .modal-footer { border-top: 1px solid var(--roamly-border-gray); padding: 1rem 1.5rem; background-color: #fff; } /* White footer */
  #bookModal .form-label { font-weight: 600; margin-bottom: 0.75rem; display: block; color: var(--roamly-dark-color); }
  #bookModal .form-input { margin-bottom: 1rem; }
  #dateRange {
      cursor: pointer; /* Indicate it's clickable */
      background-color: #fff; /* Ensure white background */
  }
  .unavailable-dates-info { font-size: 0.85rem; color: var(--roamly-text-medium); margin-top: 1rem; padding: 0.75rem; background-color: var(--roamly-light-gray); border-radius: var(--border-radius-sm); border: 1px solid var(--roamly-border-gray); }
  .unavailable-dates-info strong { color: var(--roamly-dark-color); }
  .modal-footer .btn { padding: 10px 24px; font-size: 1rem; font-weight: 600; width: auto; display: inline-block; }
  .modal-footer .btn-secondary { background-color: var(--roamly-light-gray); color: var(--roamly-dark-color); border: none; }
  .modal-footer .btn-secondary:hover { background-color: #eee; }


  /* --- Flatpickr Integration - Airbnb Style --- */
  .flatpickr-calendar {
    z-index: 1056 !important; /* Ensure it's above modal */
    box-shadow: var(--shadow-md);
    border-radius: var(--border-radius); /* Use consistent radius */
    border: 1px solid var(--roamly-border-gray);
    background: #fff;
    width: auto; /* Allow auto width */
    font-family: 'Inter', sans-serif;
    padding: 8px; /* Add some internal padding */
  }
  .flatpickr-months .flatpickr-month {
      background: #fff;
      color: var(--roamly-dark-color);
      height: 40px; /* Increase height */
      fill: var(--roamly-dark-color);
  }
  .flatpickr-months .flatpickr-prev-month,
  .flatpickr-months .flatpickr-next-month {
      top: 10px; /* Adjust arrow position */
      padding: 4px;
      fill: var(--roamly-dark-color); /* Arrow color */
  }
  .flatpickr-months .flatpickr-prev-month:hover svg,
  .flatpickr-months .flatpickr-next-month:hover svg {
      fill: var(--roamly-red);
  }
  span.flatpickr-weekday {
      color: var(--roamly-text-medium);
      font-weight: 500; /* Slightly bolder weekdays */
      font-size: 0.75rem;
      letter-spacing: 0.05em;
  }
  .dayContainer { /* Add padding around days */
     padding: 0 4px;
     width: 100%; /* Fix potential width issues */
     min-width: 280px; /* Ensure minimum width */
     box-sizing: border-box;
  }
  .flatpickr-day {
      border: 1px solid transparent; /* Prepare for focus ring */
      color: var(--roamly-text-color);
      font-weight: 400;
      max-width: 38px; /* Consistent day size */
      height: 38px;
      line-height: 38px;
      margin: 1px; /* Add slight margin */
      border-radius: 50%; /* Make days circular */
  }
  .flatpickr-day.today {
      border-color: var(--roamly-border-gray); /* Subtle today indicator */
      color: var(--roamly-dark-color);
  }
  .flatpickr-day:hover {
      background: var(--roamly-light-gray);
      border-color: transparent;
      cursor: pointer;
  }
  .flatpickr-day.selected,
  .flatpickr-day.startRange,
  .flatpickr-day.endRange,
  .flatpickr-day.selected:focus,
  .flatpickr-day.startRange:focus,
  .flatpickr-day.endRange:focus,
  .flatpickr-day.selected:hover,
  .flatpickr-day.startRange:hover,
  .flatpickr-day.endRange:hover {
      background: var(--roamly-dark-color); /* Use dark color for selection */
      border-color: var(--roamly-dark-color);
      color: #fff;
      outline: none;
      box-shadow: none;
  }
  .flatpickr-day.inRange {
      background: var(--roamly-light-gray); /* Lighter range color */
      box-shadow: none;
      border-color: transparent;
      color: var(--roamly-dark-color);
      border-radius: 0; /* Make range square */
  }
  /* Adjust start/end range corners */
  .flatpickr-day.startRange, .flatpickr-day.endRange {
     border-radius: 50%;
  }
   /* Correctly apply range background */
  .flatpickr-day.startRange + .flatpickr-day.inRange,
  .flatpickr-day.inRange + .flatpickr-day.endRange,
  .flatpickr-day.inRange + .flatpickr-day.inRange {
      border-radius: 0;
  }
  .flatpickr-day.startRange { border-top-right-radius: 0; border-bottom-right-radius: 0; }
  .flatpickr-day.endRange { border-top-left-radius: 0; border-bottom-left-radius: 0; }
  /* Handle single day selection in range */
  .flatpickr-day.startRange.endRange { border-radius: 50%; }

  .flatpickr-day.inRange:hover {
      background: #e2e2e2; /* Slightly darker hover for range */
  }
  .flatpickr-day.flatpickr-disabled,
  .flatpickr-day.flatpickr-disabled:hover {
      background: none;
      color: #ccc; /* Lighter disabled color */
      cursor: default;
      text-decoration: line-through;
  }
  .flatpickr-day:focus { /* Focus style */
      outline: none;
      background: var(--roamly-light-gray);
      border-color: var(--roamly-dark-color);
      box-shadow: none;
  }
  .numInputWrapper { /* Hide number inputs */
    display: none;
  }


  /* --- Responsive --- */
  @media (min-width: 992px) {
    .listing-header-main h1 { font-size: 32px; } /* Larger on desktop */
    .listing-image-container { max-height: 560px; }
    /* Desktop layout: Content left (2/3), Sidebar right (1/3) */
    .listing-body-grid { grid-template-columns: minmax(0, 2fr) minmax(0, 1fr); gap: 60px 100px; }
    /* --- *** ORDER FOR DESKTOP *** --- */
    .listing-content { order: 1; } /* Content left */
    .listing-sidebar { order: 2; } /* Sidebar right */
    /* --- *** END ORDER CHANGE *** --- */
    .listing-actions { flex-direction: row; }
    .btn { width: auto; } /* Buttons auto-width on desktop */
    .listing-actions form .btn, .listing-actions .btn { width: auto; }
    .booking-card .btn { width: 100%; } /* Booking button stays full width */
    .booking-card { position: sticky; top: 104px; } /* Activate sticky sidebar */
  }

  @media (max-width: 768px) { /* Tablet adjustments */
     .listing-body-grid { gap: 40px; } /* Reduce gap on tablet */
     .listing-map { height: 300px; }
     .review-list { gap: 24px; }
     .page-container { padding: 0 16px; margin: 32px auto;} /* Less padding */
  }

  @media (max-width: 600px) { /* Small Phone Adjustments */
    .listing-image-container { max-height: 300px; border-radius: 0; margin-left: -16px; margin-right: -16px; } /* Full width image */
    .listing-header-main { padding-bottom: 16px; margin-bottom: 16px; }
    .listing-header-main h1 { font-size: 22px; }
    .listing-map { height: 250px; }
    .info-section { padding: 0; }
    .booking-card { padding: 20px; box-shadow: var(--shadow-sm); } /* Less shadow on mobile */
    .review-form-box { padding: 0; border-top: none; }
    .login-prompt { padding: 24px 0; border-top: none; }
    .review-section, .leave-review-section, .map-section { margin-top: 32px; }
    hr { margin: 32px 0; }
  }
</style>


<div class="page-container">

  <header class="listing-header-main">
    <h1><%= listing.title %></h1>
    <div class="listing-location">
      <i class="fa-solid fa-location-dot"></i>
      <span><%= listing.location %>, <%= listing.country %></span>
      </div>
  </header>

  <div class="listing-image-container">
    <img
      src="<%= listing.image?.url || 'https://images.unsplash.com/photo-1568605114967-8130f3a36994?w=1200&h=800&fit=crop' %>" alt="Listing Image"
      loading="lazy"
      onerror="this.onerror=null; this.src='https://images.unsplash.com/photo-1568605114967-8130f3a36994?w=1200&h=800&fit=crop';">
  </div>

  <main class="listing-body-grid">

    <aside class="listing-sidebar">
      <div class="booking-card">
        <div class="booking-price">
          ₹<%= listing.price ? listing.price.toLocaleString("en-in") : "N/A" %>
          <span>/ night</span>
        </div>

        <% if (!currUser) { %>
            <a href="/login?returnTo=/listings/<%= listing._id %>" class="btn btn-danger">Login to Book</a>
        <% } else if (listing.owner && listing.owner._id.equals(currUser._id)) { %>
            <div class="booking-card-host-message">You are the host of this listing.</div>
        <% } else { %>
            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#bookModal">
                Book Now
            </button>
        <% } %>

      </div>
    </aside>

    <div class="listing-content">

      <section class="info-section">
        <div class="info-header">
          <div class="owner-info">
             <span class="owner-name">Hosted by <%= listing.owner?.username || 'Host' %></span>
             </div>
          <img src="<%= listing.owner?.avatar || 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png' %>"
               alt="Owner" class="owner-avatar">
        </div>
        <p class="listing-description"><%- listing.description.replace(/\n/g, '<br>') %></p> <div class="listing-actions">
          <% if (currUser && listing.owner && (listing.owner._id.equals(currUser._id) || currUser.username === 'sujalbhatt')) { %>
            <a href="/listings/<%= listing._id %>/edit" class="btn btn-outline">Edit</a>
            <form method="POST" action="/listings/<%= listing._id %>?_method=DELETE" onsubmit="return confirm('Are you sure you want to delete this listing?');">
              <button type="submit" class="btn btn-danger-outline">Delete</button>
            </form>
          <% } %>
        </div>
      </section>

      <hr>

      <section class="review-section">
        <h4 class="section-heading"><i class="fas fa-star" style="color: var(--roamly-red); margin-right: 8px;"></i> Reviews (<%= listing.reviews?.length || 0 %>)</h4>
        <% if (listing.reviews?.length > 0) { %>
          <div class="review-list">
            <% listing.reviews.forEach(review => { %>
              <div class="review-card">
                <div class="review-header">
                  <img src="<%= review.author?.avatar || 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png' %>"
                       alt="Profile" class="author-avatar">
                  <div class="author-info">
                    <span class="author-name"><%= review.author?.username || 'Anonymous' %></span>
                     <small class="review-date"><%= new Date(review.createdAt).toLocaleDateString('en-US', { month: 'long', year: 'numeric' }) %></small>
                  </div>
                   <span class="review-rating" title="<%= review.rating %> out of 5 stars">
                      <% for(let i=1;i<=review.rating;i++){ %><i class="fas fa-star"></i><% } %><% for(let i=review.rating + 1;i<=5;i++){ %><i class="far fa-star"></i><% } %>
                    </span>
                </div>
                <p class="review-comment"><%= review.comment %></p>
                <% if(currUser && review.author?._id && review.author._id.equals(currUser._id)) { %>
                  <div class="review-actions">
                    <form method="POST" action="/listings/<%=listing._id%>/reviews/<%=review._id%>?_method=DELETE" onsubmit="return confirm('Are you sure you want to delete this review?');">
                      <button type="submit" class="btn-delete-review">
                         <i class="fa-regular fa-trash-can"></i> Delete
                      </button>
                    </form>
                  </div>
                <% } %>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <p>No reviews yet. Be the first to leave one!</p>
        <% } %>
      </section>

      <section class="leave-review-section">
         <% if(currUser) { %>
           <div class="review-form-box">
             <h4 class="section-heading" style="border-bottom: none; margin-bottom: 1.5rem;">Leave a Review</h4>
             <form id="reviewForm" action="/listings/<%=listing._id%>/reviews" method="POST" novalidate class="needs-validation">
                <div class="form-group">
                  <label class="form-label">Your Rating</label>
                  <div class="star-rating">
                    <input type="radio" name="review[rating]" value="5" id="star5" required><label for="star5" title="5 stars">★</label>
                    <input type="radio" name="review[rating]" value="4" id="star4"><label for="star4" title="4 stars">★</label>
                    <input type="radio" name="review[rating]" value="3" id="star3"><label for="star3" title="3 stars">★</label>
                    <input type="radio" name="review[rating]" value="2" id="star2"><label for="star2" title="2 stars">★</label>
                    <input type="radio" name="review[rating]" value="1" id="star1"><label for="star1" title="1 star">★</label>
                  </div>
                  <div id="rating-error" class="rating-error-message">Please select a rating</div>
                </div>
                <div class="form-group">
                  <label for="comment" class="form-label">Your Review</label>
                  <textarea class="form-input" name="review[comment]" id="comment" rows="5" required placeholder="Share details of your own experience at this place..."></textarea>
                  <div class="invalid-feedback">Please enter your comment.</div>
                </div>
                <button type="submit" class="btn btn-dark" style="width: auto;">Submit Review</button>
             </form>
           </div>
         <% } else { %>
           <div class="login-prompt">
             <h5>Want to share your experience?</h5>
             <p>Please <a href="/login?returnTo=/listings/<%= listing._id %>">log in</a> to leave a review.</p>
             <a href="/login?returnTo=/listings/<%= listing._id %>" class="btn btn-danger">Login</a>
           </div>
         <% } %>
      </section>

      <hr>

      <section class="map-section">
        <h4 class="section-heading">Where you'll be</h4>
        <div id="map" class="listing-map"></div>
      </section>

    </div> </main>
</div>

<div class="modal fade" id="bookModal" tabindex="-1" aria-labelledby="bookModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <form method="POST" action="/bookings/create/<%= listing._id %>" id="bookingForm" class="needs-validation" novalidate>
        <div class="modal-header">
          <h5 class="modal-title" id="bookModalLabel">Select Dates</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <label for="dateRange" class="form-label">Check-in & Check-out</label>
          <input type="text" id="dateRange" class="form-input" required autocomplete="off" placeholder="Select your dates">
          <input type="hidden" name="startDate" id="startDate" required>
          <input type="hidden" name="endDate" id="endDate" required>
          <div class="invalid-feedback" id="dateRangeFeedback">Please select a valid date range.</div>

          <%
             // Prepare formatted unavailable date ranges for display
             let unavailableRanges = [];
             if (activeBookedDates && activeBookedDates.length > 0) {
                 const sortedDates = activeBookedDates.map(d => new Date(d)).sort((a, b) => a - b);
                 let startRange = sortedDates[0];
                 let endRange = sortedDates[0];
                 for (let i = 1; i < sortedDates.length; i++) {
                     const currentDate = sortedDates[i];
                     const previousDate = endRange;
                     const nextDay = new Date(previousDate);
                     nextDay.setDate(previousDate.getDate() + 1);
                     // Check if dates are consecutive by comparing date strings
                     if (currentDate.toISOString().split('T')[0] === nextDay.toISOString().split('T')[0]) {
                         endRange = currentDate;
                     } else {
                         // Format range for display
                         unavailableRanges.push(startRange.toDateString() === endRange.toDateString()
                           ? startRange.toLocaleDateString()
                           : `${startRange.toLocaleDateString()} - ${endRange.toLocaleDateString()}`);
                         startRange = currentDate;
                         endRange = currentDate;
                     }
                 }
                 // Add the last range
                 unavailableRanges.push(startRange.toDateString() === endRange.toDateString()
                   ? startRange.toLocaleDateString()
                   : `${startRange.toLocaleDateString()} - ${endRange.toLocaleDateString()}`);
             }
          %>
          <% if (unavailableRanges.length > 0) { %>
            <div class="unavailable-dates-info">
              <strong>Currently Unavailable:</strong><br>
              <%- unavailableRanges.join('<br>') %>
            </div>
          <% } %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-danger">Confirm Booking</button>
        </div>
      </form>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {

  // --- Booking Datepicker ---
  const startDateInput = document.getElementById("startDate");
  const endDateInput = document.getElementById("endDate");
  const dateRangeInput = document.getElementById("dateRange");
  const dateRangeFeedback = document.getElementById("dateRangeFeedback");
  // Ensure activeBookedDates is defined, even if empty
  const bookedDates = <%- JSON.stringify(activeBookedDates || []) %>;

  if(dateRangeInput) { // Only initialize if the element exists
      const fp = flatpickr("#dateRange", {
        mode: "range",
        minDate: "today",
        dateFormat: "Y-m-d",
        disable: bookedDates,
        monthSelectorType: 'static', // Simpler month navigation
        onChange: function(selectedDates, dateStr, instance) {
          if (selectedDates.length === 2) {
            const start = selectedDates[0];
            const end = selectedDates[1];
            startDateInput.value = start.toISOString().split("T")[0];
            endDateInput.value = end.toISOString().split("T")[0];
            // Format for user display
            dateRangeInput.value = `${start.toLocaleDateString()} - ${end.toLocaleDateString()}`;

            dateRangeInput.classList.remove('is-invalid');
            dateRangeFeedback.style.display = 'none';

            // Check if selected range includes any disabled date
            let rangeIsValid = true;
            const checkStart = new Date(start.getFullYear(), start.getMonth(), start.getDate()); // Compare dates only
            const checkEnd = new Date(end.getFullYear(), end.getMonth(), end.getDate());
            for (let i = 0; i < bookedDates.length; i++) {
                // Ensure bookedDates are compared correctly (normalize time)
                const bookedDate = new Date(bookedDates[i]);
                const checkBooked = new Date(bookedDate.getFullYear(), bookedDate.getMonth(), bookedDate.getDate());

                if (checkBooked >= checkStart && checkBooked <= checkEnd) {
                    rangeIsValid = false;
                    break;
                }
            }
            if (!rangeIsValid) {
                instance.clear(); // Clear selection
                startDateInput.value = "";
                endDateInput.value = "";
                dateRangeInput.value = ""; // Clear display input
                dateRangeInput.classList.add('is-invalid');
                dateRangeFeedback.textContent = 'Selected range includes unavailable dates.';
                dateRangeFeedback.style.display = 'block';
            }
          } else {
            // Clear hidden inputs if range is not complete
            startDateInput.value = "";
            endDateInput.value = "";
          }
        },
        onReady: function(selectedDates, dateStr, instance) {
          instance.input.setAttribute('inputmode', 'none');
        }
      });
  } // End if(dateRangeInput)

  // --- Review Form Validation ---
  const reviewForm = document.getElementById('reviewForm');
  if (reviewForm) {
    reviewForm.classList.add('needs-validation'); // Ensure class is present

    const ratingError = document.getElementById('rating-error');
    reviewForm.addEventListener('submit', function(event) {
      // Rating Validation
      const selectedRating = reviewForm.querySelector('input[name="review[rating]"]:checked');
      if (!selectedRating) {
        ratingError.style.display = 'block';
        event.preventDefault();
        event.stopPropagation();
      } else {
        ratingError.style.display = 'none';
      }

      // Bootstrap Validation for other fields
      if (!reviewForm.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
      }
      reviewForm.classList.add('was-validated');
    }, false);
  } // End if(reviewForm)

  // --- Booking Form Validation ---
  const bookingForm = document.getElementById('bookingForm');
  if (bookingForm && dateRangeInput) { // Check if elements exist
      bookingForm.addEventListener('submit', function(event) {
          // Date Range Validation
          if (!startDateInput.value || !endDateInput.value) {
              dateRangeInput.classList.add('is-invalid');
              dateRangeFeedback.textContent = 'Please select both check-in and check-out dates.';
              dateRangeFeedback.style.display = 'block';
              event.preventDefault();
              event.stopPropagation();
          } else {
              dateRangeInput.classList.remove('is-invalid');
              dateRangeFeedback.style.display = 'none';
          }

          // Bootstrap Validation
          if (!bookingForm.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          }
          bookingForm.classList.add('was-validated');
      }, false);
  } // End if(bookingForm)

  // --- MapLibre Map (Code unchanged from your working version) ---
  const apiKey = "<%= typeof MAPTILER_API_KEY !== 'undefined' ? MAPTILER_API_KEY : '' %>";
  const mapElement = document.getElementById('map');

  // Safely pass data from EJS to JavaScript
  const jsListingTitle = <%- JSON.stringify(listing.title || 'Location') %>;
  const jsListingLocation = <%- JSON.stringify(listing.location || '') %>;
  const jsListingGeometry = <%- JSON.stringify(listing.geometry || null) %>;

  if (mapElement && typeof maplibregl !== 'undefined' && apiKey) {
    let center = [78.9629, 20.5937]; // Default India

    // Use the JavaScript variable for coordinates
    if (jsListingGeometry?.coordinates?.length === 2) {
      center = [jsListingGeometry.coordinates[0], jsListingGeometry.coordinates[1]];
    }

    try {
        const map = new maplibregl.Map({
          container: 'map',
          // Using the older style URL that worked for you
          style: `https://api.maptiler.com/maps/streets/style.json?key=${apiKey}`,
          center: center,
          zoom: 11
        });

        // Add controls
        map.addControl(new maplibregl.NavigationControl(), 'top-right');
        map.addControl(new maplibregl.FullscreenControl());

        // Use the JavaScript variables for the popup content
        const popupContent = `<h6>${jsListingTitle}</h6><p>${jsListingLocation}</p>`;

        // Add marker with the corrected popup content
        new maplibregl.Marker({ color: "#E54D42" })
            .setLngLat(center)
            .setPopup(new maplibregl.Popup({ offset: 25 }).setHTML(popupContent))
            .addTo(map);

    } catch (error) {
        console.error("Map initialization error:", error);
        mapElement.innerHTML = "<p>Error loading map.</p>"; // Fallback message
    }

  } else if (mapElement && !apiKey) {
       mapElement.innerHTML = "<p>Map requires an API key.</p>";
  } else if (mapElement) {
       mapElement.innerHTML = "<p>Loading map...</p>"; // Placeholder if map library hasn't loaded yet
  } // End if(mapElement...)
});
</script>
